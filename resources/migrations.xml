<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

  <changeSet id="0" author="cliff">
    <preConditions onFail="CONTINUE">
      <dbms type="postgresql"/>
    </preConditions>
    <createProcedure>
      CREATE OR REPLACE FUNCTION update_time() RETURNS trigger
      LANGUAGE plpgsql
      AS $function$
      BEGIN
      NEW.updated_at := CURRENT_TIMESTAMP;
      RETURN NEW;
      END;
      $function$;
    </createProcedure>
    <rollback>
      DROP FUNCTION update_times();
    </rollback>
  </changeSet>
  <changeSet id="2" author="cliff">
    <createTable tableName="signups">
      <column name="id" autoIncrement="true" type="INTEGER"><constraints primaryKey="true"/></column>
      <column name="email" type="VARCHAR(255)"><constraints unique="true" /></column>
      <column name="name" type="VARCHAR(255)"/>
      <column name="created_at" type="DATETIME" defaultValue="now()"><constraints nullable="false" /></column>
      <column name="updated_at" type="DATETIME" defaultValue="now()"><constraints nullable="false" /></column>
    </createTable>
    <createTable tableName="logins">
      <column name="id" autoIncrement="true" type="INTEGER"><constraints primaryKey="true"/></column>
      <column name="email" type="VARCHAR(255)"><constraints unique="true" nullable="false"/></column>
      <column name="password_hash" type="VARCHAR(60)"><constraints nullable="false" /></column>
      <column name="admin" type="BOOLEAN" defaultValueBoolean="false"><constraints nullable="false" /></column>
      <column name="active" type="BOOLEAN" defaultValueBoolean="false"><constraints nullable="false" /></column>
      <column name="verified" type="BOOLEAN" defaultValueBoolean="false"><constraints nullable="false" /></column>
      <column name="created_at" type="DATETIME" defaultValue="now()"><constraints nullable="false" /></column>
      <column name="updated_at" type="DATETIME" defaultValue="now()"><constraints nullable="false" /></column>
    </createTable>
    <createTable tableName="activations">
      <column name="id" type="VARCHAR(60)"><constraints nullable="false" primaryKey="true"/></column>
      <column name="signup_id" type="INTEGER"><constraints referencedTableName="signups" referencedColumnNames="id" nullable="false" foreignKeyName="activations_signup_fkey"/></column>
      <column name="expires" type="DATETIME"><constraints nullable="false" /></column>
      <column name="created_at" type="DATETIME" defaultValue="now()"><constraints nullable="false" /></column>
      <column name="updated_at" type="DATETIME" defaultValue="now()"><constraints nullable="false" /></column>
    </createTable>
    <createTable tableName="api_tokens">
      <column name="id" type="INTEGER" autoIncrement="true"><constraints primaryKey="true" nullable="false" /></column>
      <column name="login_id" type="INTEGER"><constraints nullable="false" referencedTableName="logins" referencedColumnNames="id" foreignKeyName="api_tokens_login_fkey"/></column>
      <column name="token" type="VARCHAR(60)"><constraints nullable="false" /></column>
      <column name="name" type="VARCHAR(255)"><constraints nullable="false" /></column>
      <column name="active" type="BOOLEAN" defaultValueBoolean="false"><constraints nullable="false" /></column>
      <column name="created_at" type="DATETIME" defaultValue="now()"><constraints nullable="false" /></column>
      <column name="updated_at" type="DATETIME" defaultValue="now()"><constraints nullable="false" /></column>
    </createTable>
    <createTable tableName="environments">
      <column name="id" type="VARCHAR(60)"><constraints nullable="false" primaryKey="true" /></column>
      <column name="name" type="VARCHAR(255)"><constraints nullable="false" /></column>
      <column name="enabled" type="BOOLEAN" defaultValueBoolean="true"><constraints nullable="false" /></column>
      <column name="created_at" type="DATETIME" defaultValue="now()"><constraints nullable="false" /></column>
      <column name="updated_at" type="DATETIME" defaultValue="now()"><constraints nullable="false" /></column>
    </createTable>
    <createTable tableName="environments_logins">
      <column name="environment_id" type="VARCHAR(60)"><constraints nullable="false" referencedTableName="environments" referencedColumnNames="id" foreignKeyName="environment_logins_env_fkey"/></column>
      <column name="login_id" type="INTEGER"><constraints nullable="false" referencedTableName="logins" referencedColumnNames="id" foreignKeyName="login_fkey"/></column>
      <column name="created_at" type="DATETIME" defaultValue="now()"><constraints nullable="false" /></column>
    </createTable>
    <addPrimaryKey tableName="environments_logins" columnNames="environment_id,login_id"/>
    <createTable tableName="instances">
      <column name="id" type="VARCHAR(60)"><constraints nullable="false" primaryKey="true" /></column>
      <column name="image_id" type="VARCHAR(60)" />
      <column name="kernel_id" type="VARCHAR(60)" />
      <column name="env_id" type="VARCHAR(60)"><constraints referencedTableName="environments" referencedColumnNames="id" nullable="false" foreignKeyName="instances_env_fkey"/></column>
      <column name="architecture" type="VARCHAR(60)" />
      <column name="zone" type="VARCHAR(60)"><constraints nullable="false" /></column>
      <column name="region" type="VARCHAR(60)"><constraints nullable="false" /></column>
      <column name="provider" type="VARCHAR(60)"><constraints nullable="false" /></column>
      <column name="created_at" type="DATETIME" defaultValue="now()"><constraints nullable="false" /></column>
      <column name="updated_at" type="DATETIME" defaultValue="now()"><constraints nullable="false" /></column>
    </createTable>
    <createTable tableName="network_interfaces">
      <column name="id" type="VARCHAR(60)"><constraints nullable="false" primaryKey="true" /></column>
      <column name="instance_id" type="VARCHAR(60)"><constraints nullable="false" referencedTableName="instances" referencedColumnNames="id" foreignKeyName="network_interfaces_instance_fkey"/></column>
      <column name="description" type="VARCHAR(255)"/>
      <column name="status" type="VARCHAR(60)"/>
      <column name="mac_address" type="VARCHAR(60)"/>
      <column name="private_dns_name" type="VARCHAR(255)"/>
      <column name="private_ip_address" type="VARCHAR(40)"/>
      <column name="created_at" type="DATETIME" defaultValue="now()"><constraints nullable="false" /></column>
      <column name="updated_at" type="DATETIME" defaultValue="now()"><constraints nullable="false" /></column>
    </createTable>
    <createTable tableName="credentials">
      <column name="id" type="INTEGER" autoIncrement="true"><constraints nullable="false" primaryKey="true" /></column>
      <column name="env_id" type="VARCHAR(60)"><constraints nullable="false" referencedTableName="environments" referencedColumnNames="id" foreignKeyName="credentials_env_fkey" /></column>
      <column name="provider" type="VARCHAR(20)"/>
      <column name="access_key_id" type="VARCHAR(60)"/>
      <column name="secret_key" type="VARCHAR(60)"/>
      <column name="created_at" type="DATETIME" defaultValue="now()"><constraints nullable="false" /></column>
      <column name="updated_at" type="DATETIME" defaultValue="now()"><constraints nullable="false" /></column>
    </createTable>
  </changeSet>
  <changeSet id="3" author="cliff">
    <preConditions onFail="CONTINUE">
      <dbms type="postgresql"/>
    </preConditions>
    <sql>
      CREATE TRIGGER update_signups BEFORE UPDATE ON signups FOR EACH ROW EXECUTE PROCEDURE update_time();
      CREATE TRIGGER update_api_tokens BEFORE UPDATE ON api_tokens FOR EACH ROW EXECUTE PROCEDURE update_time();
      CREATE TRIGGER update_activations BEFORE UPDATE ON activations FOR EACH ROW EXECUTE PROCEDURE update_time();
      CREATE TRIGGER update_logins BEFORE UPDATE ON logins FOR EACH ROW EXECUTE PROCEDURE update_time();
      CREATE TRIGGER update_environments BEFORE UPDATE ON environments FOR EACH ROW EXECUTE PROCEDURE update_time();
      CREATE TRIGGER update_instances BEFORE UPDATE ON instances FOR EACH ROW EXECUTE PROCEDURE update_time();
      CREATE TRIGGER update_network_interfaces BEFORE UPDATE ON network_interfaces FOR EACH ROW EXECUTE PROCEDURE update_time();
      CREATE TRIGGER update_credentials BEFORE UPDATE ON credentials FOR EACH ROW EXECUTE PROCEDURE update_time();
    </sql>
    <rollback>
      DROP TRIGGER update_signups ON signups;
      DROP TRIGGER update_logins ON logins;
      DROP TRIGGER update_activations on activations;
      DROP TRIGGER update_api_tokens on api_tokens;
      DROP TRIGGER update_network_interfaces ON network_interfaces;
      DROP TRIGGER update_instances ON instances;
      DROP TRIGGER update_environments ON environments;
      DROP TRIGGER update_credentials ON credentials;
    </rollback>
  </changeSet>
  <changeSet id="4" author="cliff">
    <preConditions onFail="CONTINUE">
      <dbms type="h2"/>
    </preConditions>
    <sql>
      CREATE TRIGGER update_signups BEFORE UPDATE ON signups FOR EACH ROW CALL
      "bartnet.DateTrigger";
      CREATE TRIGGER update_api_tokens BEFORE UPDATE ON api_tokens FOR EACH ROW CALL
      "bartnet.DateTrigger";
      CREATE TRIGGER update_activations BEFORE UPDATE ON activations FOR EACH ROW CALL
      "bartnet.DateTrigger";
      CREATE TRIGGER update_logins BEFORE UPDATE ON logins FOR EACH ROW CALL
      "bartnet.DateTrigger";
      CREATE TRIGGER update_environments BEFORE UPDATE ON environments FOR EACH ROW CALL
      "bartnet.DateTrigger";
      CREATE TRIGGER update_instances BEFORE UPDATE ON instances FOR EACH ROW CALL
      "bartnet.DateTrigger";
      CREATE TRIGGER update_network_interfaces BEFORE UPDATE ON network_interfaces FOR EACH ROW CALL
      "bartnet.DateTrigger";
      CREATE TRIGGER update_credentials BEFORE UPDATE ON credentials FOR EACH ROW CALL
      "bartnet.DateTrigger";
    </sql>
    <rollback>
      DROP TRIGGER update_signups ON signups;
      DROP TRIGGER update_logins ON logins;
      DROP TRIGGER update_activations on activations;
      DROP TRIGGER update_api_tokens on api_tokens;
      DROP TRIGGER update_network_interfaces ON network_interfaces;
      DROP TRIGGER update_instances ON instances;
      DROP TRIGGER update_environments ON environments;
      DROP TRIGGER update_credentials ON credentials;
    </rollback>
  </changeSet>
  <changeSet id="5" author="cliff">
    <addColumn tableName="logins">
      <column name="onboard" type="BOOLEAN" defaultValueBoolean="true"><constraints nullable="false" /></column>
    </addColumn>
  </changeSet>
  <changeSet id="6" author="cliff">
    <addColumn tableName="logins">
      <column name="customer-id" type="VARCHAR(255)" defaultValue="cliff"><constraints unique="true" nullable="false" /></column>
    </addColumn>
  </changeSet>
  <changeSet id="7" author="cliff">
    <createTable tableName="checks">
      <column name="id" type="varchar(60)"><constraints nullable="false" primaryKey="true" /></column>
      <column name="environment_id" type="varchar(60)"><constraints nullable="false" referencedTableName="environments" referencedColumnNames="id" foreignKeyName="health_checks_env_fkey" /></column>
      <column name="name" type="varchar(20)" />
      <column name="description" type="text" />
      <column name="group_type" type="varchar(10)" />
      <column name="group_id" type="varchar(20)" />
      <column name="check_type" type="varchar(30)" />
      <column name="check_request" type="varchar(255)" />
      <column name="interval" type="integer" />
      <column name="port" type="integer" />
      <column name="created_at" type="DATETIME" defaultValue="now()"><constraints nullable="false" /></column>
      <column name="updated_at" type="DATETIME" defaultValue="now()"><constraints nullable="false" /></column>
    </createTable>
  </changeSet>
  <changeSet id="8" author="cliff">
    <modifyDataType tableName="checks" columnName="description" newDataType="varchar(255)"/>
    <renameColumn tableName="checks" oldColumnName="interval" newColumnName="check_interval"/>
  </changeSet>
  <changeSet id="9" author="cliff">
    <renameColumn tableName="logins" oldColumnName="customer-id" newColumnName="customer_id"/>
  </changeSet>
  <changeSet id="10" author="cliff">
    <dropTable tableName="activations"></dropTable>
    <createTable tableName="activations">
      <column name="id" type="varchar(60)"><constraints nullable="false" primaryKey="true"/></column>
      <column name="email" type="varchar(255)" />
      <column name="name" type="varchar(255)" />
      <column name="used" type="boolean" />
      <column name="created_at" type="DATETIME" defaultValue="now()"><constraints nullable="false"/></column>
      <column name="updated_at" type="DATETIME" defaultValue="now()"><constraints nullable="false"/></column>
    </createTable>
  </changeSet>
  <changeSet id="11" author="cliff">
    <preConditions onFail="CONTINUE">
      <dbms type="postgresql"/>
    </preConditions>
    <sql>
      CREATE TRIGGER update_activations BEFORE UPDATE ON activations FOR EACH ROW EXECUTE PROCEDURE update_time();
    </sql>
    <rollback>
      DROP TRIGGER update_activations ON activations;
    </rollback>
  </changeSet>
  <changeSet id="12" author="cliff">
    <preConditions onFail="CONTINUE">
      <dbms type="h2"/>
    </preConditions>
    <sql>
      CREATE TRIGGER update_activations BEFORE UPDATE ON activations FOR EACH ROW CALL
      "bartnet.DateTrigger";
    </sql>
    <rollback>
      DROP TRIGGER update_activations ON activations;
    </rollback>
  </changeSet>
  <changeSet id="13" author="cliff">
    <addColumn tableName="logins">
      <column name="name" type="varchar(255)" />
    </addColumn>
  </changeSet>
  <changeSet id="14" author="cliff">
    <createTable tableName="teams">
      <column name="id" type="varchar(255)"><constraints nullable="false" primaryKey="true"/></column>
      <column name="name" type="varchar(255)"/>
    </createTable>
  </changeSet>
  <changeSet id="15" author="greg">
    <createTable tableName="orgs">
      <column name="id" type="INTEGER" autoIncrement="true"><constraints primaryKey="true" nullable="false" /></column>
      <column name="name" type="varchar(255)"><constraints nullable="false"/></column>
      <!-- No need to create index, because unique -->
      <column name="subdomain" type="varchar(64)"><constraints nullable="false" unique="true"/></column>
    </createTable>
  </changeSet>
  <changeSet id="16" author="greg">
    <sql>
      insert into orgs (name, subdomain) (select customer_id, customer_id from logins l left outer join orgs o on l.customer_id = o.subdomain where o.subdomain is null);
    </sql>
    <dropUniqueConstraint tableName="logins" uniqueColumns="customer_id" constraintName="logins_customer-id_key"/>
    <dropColumn tableName="orgs" columnName="id"/>
    <modifyDataType tableName="logins" columnName="customer_id" newDataType="varchar(64)"/>
    <addForeignKeyConstraint baseTableName="logins" baseColumnNames="customer_id" constraintName="fk_logins_orgs" referencedTableName="orgs"
                             referencedColumnNames="subdomain"/>
  </changeSet>
  <changeSet id="17" author="greg">
    <dropNotNullConstraint tableName="logins" columnName="customer_id"/>
  </changeSet>
  <changeSet id="18" author="cliff">
    <dropTable tableName="checks" />
    <createTable tableName="targets">
      <column name="name" type="varchar(255)"/>
      <column name="type" type="varchar(255)"/>
      <column name="id" type="varchar(255)"><constraints primaryKey="true" nullable="false"/></column>
    </createTable>
    <createTable tableName="checks">
      <column name="id" type="varchar(255)"><constraints primaryKey="true" nullable="false"/></column>
      <column name="interval" type="integer"/>
      <column name="target_id" type="varchar(255)"/>
      <column name="last_run" type="integer"/>
      <column name="check_spec" type="jsonb"/>
    </createTable>
  </changeSet>
  <changeSet id="19" author="cliff">
    <addColumn tableName="checks">
      <column name="environment_id" type="varchar(255)"/>
    </addColumn>
    <addForeignKeyConstraint baseTableName="checks" baseColumnNames="environment_id" constraintName="fk_checks_env" referencedTableName="environments"
                             referencedColumnNames="id"/>
    <addForeignKeyConstraint baseTableName="checks" baseColumnNames="target_id" constraintName="fk_checks_targets" referencedTableName="targets"
                             referencedColumnNames="id"/>
  </changeSet>
  <changeSet id="20" author="cliff">
    <dropColumn tableName="checks" columnName="last_run"/>
    <addColumn tableName="checks">
      <column name="last_run" type="DATETIME"/>
    </addColumn>
  </changeSet>
  <changeSet id="21" author="mark">
    <dropTable tableName="activations" cascadeConstraints="true"/>
    <dropTable tableName="api_tokens" cascadeConstraints="true"/>
    <dropTable tableName="environments_logins" cascadeConstraints="true"/>
    <dropTable tableName="environments" cascadeConstraints="true"/>
    <dropTable tableName="network_interfaces" cascadeConstraints="true"/>
    <dropTable tableName="instances" cascadeConstraints="true"/>
    <dropTable tableName="logins" cascadeConstraints="true"/>
    <dropTable tableName="orgs" cascadeConstraints="true"/>
    <dropTable tableName="signups" cascadeConstraints="true"/>
    <dropTable tableName="teams" cascadeConstraints="true"/>
    <dropColumn tableName="checks" columnName="environment_id"/>
    <dropColumn tableName="credentials" columnName="env_id"/>
    <addColumn tableName="checks">
      <column name="customer_id" type="UUID"><constraints nullable="false"></constraints></column>
    </addColumn>
    <addColumn tableName="credentials">
      <column name="customer_id" type="UUID"><constraints nullable="false"></constraints></column>
    </addColumn>
    <createIndex tableName="checks" indexName="idx_checks_customer_id">
      <column name="customer_id" type="UUID"></column>
    </createIndex>
    <createIndex tableName="credentials" indexName="idx_credentials_customer_id">
      <column name="customer_id" type="UUID"></column>
    </createIndex>
  </changeSet>
  <changeSet id="22" author="greg">
    <delete tableName="checks"/>
    <addColumn tableName="checks">
      <column name="name" type="varchar(255)"><constraints nullable="false"/></column>
    </addColumn>
  </changeSet>
  <changeSet id="23" author="greg">
    <preConditions onFail="MARK_RAN">
      <not>
        <sqlCheck expectedResult="t">
          select exists (select 1 from pg_type where typname = 'relationship_type');
        </sqlCheck>
    </not>
    </preConditions>
    <sql>
      CREATE TYPE relationship_type AS enum (
        'equal',
        'notEqual',
        'empty',
        'notEmpty',
        'contain',
        'notContain',
        'regExp'
      );
    </sql>
  </changeSet>
  <changeSet id="24" author="greg">
    <preConditions onFail="MARK_RAN">
      <not>
        <tableExists tableName="assertions"/>
      </not>
    </preConditions>
    <createTable tableName="assertions">
      <column name="check_id" type="VARCHAR(255)">
        <constraints nullable="false"/>
      </column>
      <column name="customer_id" type="UUID">
        <constraints nullable="false"/>
      </column>
      <column name="key" type="VARCHAR(255)">
        <constraints nullable="false"/>
      </column>
      <column name="relationship" type="relationship_type">
        <constraints nullable="false"/>
      </column>
      <column name="value" type="VARCHAR(255)">
        <constraints nullable="false"/>
      </column>
      <column name="operand" type="VARCHAR(255)">
        <constraints nullable="false"/>
      </column>
    </createTable>
  </changeSet>
  <changeSet id="25" author="greg" failOnError="false" runInTransaction="false">
    <sql>
      alter type relationship_type add value 'greaterThan';
      alter type relationship_type add value 'lessThan';
    </sql>
  </changeSet>
  <changeSet id="26" author="mark" failOnError="false" runInTransaction="false">
    <sql>
      alter table assertions alter column value drop not null;
    </sql>
  </changeSet>
  <changeSet id="27" author="markiscool" failOnError="false" runInTransaction="false">
    <sql>
      alter table assertions alter column operand drop not null;
    </sql>
</changeSet>
<changeSet id="28" author="mike" runInTransaction="true" failOnError="true">
    <sql>
        alter table checks add column target_name varchar(255);
        alter table checks add column target_type varchar(255);
        update checks c set target_name = t.name from targets t where c.target_id = t.id;
        update checks c set target_type = t.type from targets t where c.target_id = t.id;
        alter table checks drop constraint fk_checks_targets;
        drop table targets;
        alter table checks alter COLUMN target_id set not null;
        alter table checks alter COLUMN target_type set not null;
        alter table checks drop column last_run;
    </sql>
</changeSet>
<changeSet id="29" author="markisbest" runInTransaction="true" failOnError="true">
    <sql>
        alter table checks add column execution_group_id UUID;
        update checks set execution_group_id = customer_id;
        create index execution_group_id_idx on checks (execution_group_id);
        create index cust_execution_group_id_idx on checks (customer_id, execution_group_id);
        alter table checks alter column execution_group_id set not null;
    </sql>
</changeSet>
<changeSet id="30" author="greg" runInTransaction="true" failOnError="true">
  <createTable tableName="check_states">
    <column name="check_id" type="varchar(255)"><constraints primaryKey="true" nullable="false"/></column>
    <column name="customer_id" type="UUID"><constraints nullable="false"/></column>
    <column name="state_id" type="integer"><constraints nullable="false"/></column>
    <column name="state_name" type="varchar(255)"><constraints nullable="false"/></column>
    <column name="time_entered" type="timestamp with time zone"><constraints nullable="false"/></column>
    <column name="last_updated" type="timestamp with time zone"><constraints nullable="false"/></column>
  </createTable>
  <createTable tableName="check_state_memos">
    <column name="check_id" type="varchar(255)"><constraints primaryKey="true" nullable="false"/></column>
    <column name="customer_id" type="UUID"><constraints nullable="false"/></column>
    <column name="bastion_id" type="UUID"><constraints nullable="false"/></column>
    <column name="failing_count" type="integer"><constraints nullable="false"/></column>
    <column name="response_count" type="integer"><constraints nullable="false"/></column>
    <column name="last_updated" type="timestamp with time zone"><constraints nullable="false"/></column>
  </createTable>
	<sql>
		create index bastion_id_idx on check_state_memos (bastion_id);
		alter table checks add column min_failing_count integer;
		alter table checks alter column min_failing_count set default 1;
		alter table checks add column min_failing_time integer;
		alter table checks alter column min_failing_time set default 90;
		update checks set min_failing_count=1, min_failing_time=90 where min_failing_count is null or min_failing_time is null;
	</sql>
</changeSet>
<changeSet id="31" author="greg" runInTransaction="true" failOnError="true">
    <sql>
        alter table check_states add column failing_count integer not null;
        alter table check_states add column response_count integer not null;
    </sql>
</changeSet>
<changeSet id="32" author="gregiscool2" runInTransaction="true" failOnError="true">
    <sql>
        update checks set min_failing_count=1, min_failing_time=90 where min_failing_count is null or min_failing_time is null;
        alter table checks alter column min_failing_count set not null;
        alter table checks alter column min_failing_time set not null;
    </sql>
</changeSet>
</databaseChangeLog>
